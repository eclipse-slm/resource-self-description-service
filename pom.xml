<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>resource-self-description-service</name>
    <groupId>org.eclipse.slm.self-description-service</groupId>
    <artifactId>root</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <modules>
        <module>app</module>
        <module>datasources</module>
    </modules>

    <properties>
        <revision>0.0.1-SNAPSHOT</revision>

        <java.version>21</java.version>
        <kotlin.version>2.2.20</kotlin.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.required.version>[3.6.3,)</maven.required.version>
        <!-- Deployment -->
        <docker.image.skip>false</docker.image.skip>
        <docker.image.registry>ghcr.io/eclipse-slm</docker.image.registry>
        <artifact.deployment.skip>true</artifact.deployment.skip>
        <!-- Maven Plugins !-->
        <maven.plugin.surefire.version>3.5.0</maven.plugin.surefire.version>
        <maven.plugin.failsafe.version>3.5.0</maven.plugin.failsafe.version>
        <maven.plugin.apache.compiler.version>3.13.0</maven.plugin.apache.compiler.version>
        <maven.plugin.jacoco.version>0.9.1</maven.plugin.jacoco.version>
        <maven.plugin.dockerfile.version> 1.4.10</maven.plugin.dockerfile.version>
        <maven.plugin.codehaus.exec.version>3.5.1</maven.plugin.codehaus.exec.version>
        <maven.plugin.apache.deploy.version>3.1.3</maven.plugin.apache.deploy.version>
        <maven.plugin.apache.resources.version>3.3.1</maven.plugin.apache.resources.version>
        <maven.plugin.jlib.version>3.4.2</maven.plugin.jlib.version>
        <maven.plugin.enforcer.version>3.4.1</maven.plugin.enforcer.version>
        <!-- Spring -->
        <springdoc.openapi.version>2.8.13</springdoc.openapi.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.0.3</springdoc-openapi-starter-webmvc-ui.version>
        <swagger.version>2.2.37</swagger.version>
        <spring.boot.version>3.5.6</spring.boot.version>
        <spring-cloud.version>2025.0.0</spring-cloud.version>
        <springaddons-c4-soft.version>7.8.10</springaddons-c4-soft.version>
        <spring-cloud-contract-wiremock.version>4.1.4</spring-cloud-contract-wiremock.version>
        <!-- Common !-->
        <jackson.version>2.19.2</jackson.version>
        <keycloak.version>19.0.3</keycloak.version>
        <freemarker.version>2.3.33</freemarker.version>
        <snakeyaml.version>2.3</snakeyaml.version>
        <jayway.jsonpath.version>2.9.0</jayway.jsonpath.version>
        <apache.httpcomponents>4.5.14</apache.httpcomponents>
        <apache.httpcomponents.core5.version>5.3.1</apache.httpcomponents.core5.version>
        <apache.httpcomponents.client5.version>5.4.1</apache.httpcomponents.client5.version>
        <apache.commons.compress.version>1.28.0</apache.commons.compress.version>
        <docker-java.version>3.6.0</docker-java.version>
        <prometheus-metrics-simpleclient-bridge.version>1.0.0</prometheus-metrics-simpleclient-bridge.version>
        <oshi.version>6.9.0</oshi.version>
        <!-- AAS !-->
        <aas.aas4j.version>1.0.5</aas.aas4j.version>
        <common.aas.version>1.4.0-SNAPSHOT</common.aas.version>
        <basyx.version>2.0.0-milestone-07</basyx.version>
        <!-- Testing -->
        <assertj.version>3.27.6</assertj.version>
        <jacoco.version>0.8.12</jacoco.version>
        <mockito-core.version>5.20.0</mockito-core.version>
        <mockito-inline.version>5.2.0</mockito-inline.version>
        <testcontainers.version>1.21.3</testcontainers.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <h2database.version>2.4.240</h2database.version>
        <github.dasniko.testcontainers-keycloak.version>3.8.0</github.dasniko.testcontainers-keycloak.version>
        <github.tomakehurst.wiremock.version>2.27.2</github.tomakehurst.wiremock.version>
        <restdocs-api-spec-restassured.version>0.16.2</restdocs-api-spec-restassured.version>
        <junit-jupiter.version>5.12.2</junit-jupiter.version>
        <junit-platform.version>1.12.2</junit-platform.version>
    </properties>

    <dependencyManagement>

        <dependencies>
            <!-- Spring -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Kotlin !-->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-common</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- OpenAPI !-->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.openapi.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- Testing !-->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.agent</artifactId>
                <version>${jacoco.version}</version>
                <classifier>runtime</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mariadb</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- AAS !-->
            <dependency>
                <groupId>org.eclipse.digitaltwin.aas4j</groupId>
                <artifactId>aas4j-model</artifactId>
                <version>${aas.aas4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.digitaltwin.aas4j</groupId>
                <artifactId>aas4j-dataformat-aasx</artifactId>
                <version>${aas.aas4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${apache.commons.compress.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>

        <!-- Jackson !-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jakarta-xmlbind-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Testing !-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
            <version>${junit-jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
            <version>${junit-jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <scope>test</scope>
            <version>${junit-platform.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <scope>test</scope>
            <version>${junit-platform.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
            <version>${mockito-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito-inline.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.openpojo</groupId>
            <artifactId>openpojo</artifactId>
            <version>${maven.plugin.jacoco.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>truststore/*</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources/truststore</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.aasx</include>
                </includes>
            </resource>
        </resources>

        <pluginManagement>

            <plugins>
                <!-- Testing !-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven.plugin.jacoco.version}</version>
                </plugin>

                <!-- Spring Boot !-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                                <goal>build-info</goal>
                            </goals>
                            <configuration>
                                <classifier>exec</classifier>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Docker Image !-->
                <plugin>
                    <artifactId>jib-maven-plugin</artifactId>
                    <groupId>com.google.cloud.tools</groupId>
                    <version>${maven.plugin.jlib.version}</version>
                    <configuration>
                        <to>
                            <image>${docker.image.registry}/${docker.image.name}:${project.version}</image>

                            <tags>
                                <tag>${project.version}</tag>
                            </tags>
                        </to>
                        <skip>${docker.image.skip}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>dockerBuild</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Resources !-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.plugin.apache.resources.version}</version>
                <configuration>
                    <delimiters>
                        <delimiter>${resource.delimiter}</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>aasx</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <!-- Deployment !-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.plugin.apache.deploy.version}</version>
                <configuration>
                    <skip>${artifact.deployment.skip}</skip>
                </configuration>
            </plugin>
            <!-- Testing !-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.plugin.surefire.version}</version>
                <configuration>
                    <argLine>${surefireArgLine}</argLine>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <reportsDirectory>${project.build.directory}/test-reports</reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.plugin.failsafe.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>${failsafeArgLine}</argLine>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <reportsDirectory>${project.build.directory}/test-reports</reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.12.1</version>
            </plugin>

            <!-- Compilation: Kotlin !-->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                </configuration>
            </plugin>
            <!-- Compilation: Java !-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.apache.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Versioning !-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.7</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.plugin.enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.required.version}</version>
                                    <message>Maven ${maven.required.version} or newer is required to build this project.</message>
                                </requireMavenVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Packages</name>
            <url>https://maven.pkg.github.com/eclipse-slm/resource-self-description-service</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>github</id>
            <url>https://maven.pkg.github.com/eclipse-slm/slm</url>
        </repository>
    </repositories>

</project>
