name: Build

on:
  push:
    branches:
      - main
      - develop
      - release/*
      - feature/*
      - fix/*
    tags:
      - "*"
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_CLI_OPTS: "-T 8 -s ci/ci_maven_settings.xml --batch-mode --errors --fail-at-end --show-version --no-transfer-progress -DinstallAtEnd=true -DdeployAtEnd=true --update-snapshots"
      MAVEN_PROFILES: ""
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          path: ci/ci_maven_settings.xml
          githubServer: false
          servers: '[
            {
              "id": "ghcr.io",
              "username": "${{github.actor}}",
              "password": "${{secrets.GITHUB_TOKEN}}"
            },
            {
              "id": "github",
              "username": "${{github.actor}}",
              "password": "${{secrets.GITHUB_TOKEN}}"
            }
          ]'

      - name: Build & Deploy (main, develop, release/*, tags)
        if: github.event_name != 'pull_request' && (github.ref_name == 'develop' || github.ref_name == 'main' || startsWith(github.ref_name, 'release/') || startsWith(github.ref, 'refs/tags/'))
        run: mvn $MAVEN_PROFILES $MAVEN_CLI_OPTS clean deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build (feature/*, fix/*, pull_request)
        if: github.event_name == 'pull_request' || startsWith(github.ref_name, 'feature/') || startsWith(github.ref_name, 'fix/')
        run: mvn $MAVEN_PROFILES $MAVEN_CLI_OPTS clean verify
      - name: Log test output on failure
        if: failure() || cancelled()
        run: find . -type f -path "*test-reports/*-output.txt" -exec tail -n +1 {} +

      # Steps for release (only for main, develop, release/*, tags)
      - name: Prepare release artifacts
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          JAR_NAME="resource-self-description-service-$VERSION.jar"
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_ENV
          cp app/target/*-exec.jar $JAR_NAME
      - name: Create pre-release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true
          name: ${{env.VERSION}}
          body: "Snapshot release of version ${{env.VERSION}}"
          files: ${{env.JAR_NAME}}
          overwrite_files: true